name: Build Twitch-Chat-Controller

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    name: Build Twitch-Chat-Controller
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2.4.0
        with:
          submodules: recursive

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        id: build_step
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            "BUILDER=${{ github.actor }}"
            "VERSION=${{ github.sha }}"
          tags: |
            harbor.disembark.dev/7tv/waterhose:${{ github.sha }}
            harbor.disembark.dev/7tv/waterhose:latest

  deploy:
    name: Deploy Twitch-Chat-Controller (Production)
    runs-on: ubuntu-latest
    needs: # Run this after build
      - build

    steps:
      # Checkout repository
      - uses: actions/checkout@v2.4.0

      # Deploy to k8s
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0

      - name: Apply Deployment & Rollout
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
          KUBE_IMAGE_PATCH: >-
            [
              { "op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "harbor.disembark.dev/7tv/waterhose:${{ github.sha }}" }
            ]
        run: |
          mkdir -p ~/.kube
          (echo $KUBE_CONFIG_DATA | base64 -d) >> ~/.kube/config
          kubectl config use-context autodeploy@SevenTV

          kubectl patch deploy waterhose-master --type="json" -p="$KUBE_IMAGE_PATCH"
          kubectl patch statefulset waterhose-slave --type="json" -p="$KUBE_IMAGE_PATCH"
